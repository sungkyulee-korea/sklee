name: Security AI Scan (safe + detailed)

on:
  push:
    branches: ['**']
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

permissions:
  contents: read
  issues: write
  pull-requests: write

env:
  # 저장소에 등록한 시크릿 이름과 동일하게 설정하세요
  OPENAI_API_KEY: ${{ secrets.SKLEE_OPENAI_API_KEY }}
  MAX_FILE_BYTES: "150000"
  MAX_FILES_TO_ANALYZE: "200"

jobs:
  security-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies (semgrep, requests)
        run: |
          python -m pip install --upgrade pip
          pip install semgrep requests

      - name: Run semgrep (builtin rules + custom rules)
        run: |
          echo "Running semgrep with builtin p/ci and custom rules (if exist)"
          # custom rules file path (repo에 추가한 경우)
          CUSTOM_RULES=".semgrep/java-sqli.yml"
          if [ -f "$CUSTOM_RULES" ]; then
            semgrep --config p/ci,"$CUSTOM_RULES" --json --output semgrep-results.json || true
          else
            semgrep --config p/ci --json --output semgrep-results.json || true
          fi
          echo "semgrep exit: $?"
          echo "semgrep results head (if exists):"
          if [ -f semgrep-results.json ]; then head -n 200 semgrep-results.json || true; else echo "no semgrep-results.json"; fi

      - name: Debug: list workspace top & git status
        run: |
          echo "=== top-level files ==="
          ls -la | sed -n '1,200p'
          echo "=== .github/scripts listing ==="
          ls -la .github/scripts || true
          echo "=== git status ==="
          git rev-parse --abbrev-ref HEAD || true
          git status --porcelain || true

      - name: Run external security script (generate report files)
        run: |
          echo "Run security script (will always produce report.md even if no findings)"
          python .github/scripts/security_scan.py
        env:
          OPENAI_API_KEY: ${{ secrets.SKLEE_OPENAI_API_KEY }}
          GITHUB_REF: ${{ github.ref }}
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_REPOSITORY: ${{ github.repository }}

      - name: Debug: show generated reports
        run: |
          echo "---- report.md ----"
          if [ -f report.md ]; then
            echo "report.md size: $(stat -c%s report.md)"; sed -n '1,200p' report.md
          else
            echo "report.md missing"
          fi
          echo "---- ai_summary_structured.json ----"
          if [ -f ai_summary_structured.json ]; then head -n 200 ai_summary_structured.json || true; else echo "ai_summary_structured.json missing"; fi
          echo "---- semgrep-results.json ----"
          if [ -f semgrep-results.json ]; then head -n 200 semgrep-results.json || true; else echo "semgrep-results.json missing"; fi

      - name: Post result (PR comment or create Issue)  # 항상 시도
        if: ${{ always() }}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let body = '';
            if (fs.existsSync('report.md')) {
              body = fs.readFileSync('report.md','utf8');
            } else {
              body = 'No report.md was generated.\n\n';
              body += 'Workspace files (top):\n' + fs.readdirSync('.').slice(0,200).join('\n') + '\n\n';
              if (fs.existsSync('semgrep-results.json')) {
                body += 'semgrep-results.json present but report.md missing. semgrep head:\n';
                body += fs.readFileSync('semgrep-results.json','utf8').slice(0,2000);
              } else {
                body += 'semgrep-results.json not present.\n';
              }
            }

            const isPR = !!context.payload.pull_request;
            if (isPR) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                body: `### 🤖 AI Security Review (자동 리포트)\n\n${body}\n\n_자동 생성 — 담당자 검토 필요_`
              });
            } else {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `[AI Security Scan] 자동 리포트 - ${new Date().toISOString().slice(0,10)}`,
                body: `브랜치: ${context.ref}\n\n${body}\n\n_자동 생성 리포트_`
              });
            }

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: security-scan-artifacts
          path: |
            semgrep-results.json
            ai_summary_structured.json
            files_to_analyze.json
            files_content.json
            heuristics.json
            report.md
